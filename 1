#include <iostream>
#include <string>
using namespace std;
string encryptCaesar(const string& plaintext, int shift) {
    string ciphertext;
    int length = plaintext.length();
    for (int i = 0; i < length; ++i) {
        char ch = plaintext[i];
        if (isupper(ch)) {
            ch = ((ch - 'A') + shift) % 26 + 'A';
        }
        else if (islower(ch)) {
            ch = ((ch - 'a') + shift) % 26 + 'a';
        }
        ciphertext.push_back(ch);
    }
    return ciphertext;
}
string decryptCaesar(const string& ciphertext, int shift) {
    string plaintext;
    int length = ciphertext.length();
    for (int i = 0; i < length; ++i) {
        char ch = ciphertext[i];
        if (isupper(ch)) {
            ch = ((ch - 'A') - shift + 26) % 26 + 'A';
        }
        else if (islower(ch)) {
            ch = ((ch - 'a') - shift + 26) % 26 + 'a';
        }
        plaintext.push_back(ch);
    }
    return plaintext;
}
int main() {
    string plaintext;
    int shift;
    cout << "Enter plaintext: ";
    getline(cin, plaintext);
    cout << "Enter shift value: ";
    cin >> shift;
    string ciphertext = encryptCaesar(plaintext, shift);
    cout << "Ciphertext: " << ciphertext <<endl;
    string decryptedText = decryptCaesar(ciphertext, shift);
    cout << "Decrypted text: " << decryptedText <<endl;
    return 0;
}
